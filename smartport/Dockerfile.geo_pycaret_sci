#Start from a core stack version
FROM  jupyter/base-notebook:2023-01-02

LABEL authors = "Mark Bartlett"
LABEL maintainer = "bartlett <mbartlett@thewaterinstitute.org>"

#Install scistack environment
ARG conda_env=stack-sci
ARG py_ver=3.9

COPY --chown=${NB_UID}:${NB_GID} "${conda_env}.yml" "/home/${NB_USER}/tmp/"
RUN cd "/home/${NB_USER}/tmp/" && \
     mamba env create -p "${CONDA_DIR}/envs/${conda_env}" -f "${conda_env}.yml" && \
     mamba clean --all -f -y

RUN "${CONDA_DIR}/envs/${conda_env}/bin/python" -m ipykernel install --user --name="${conda_env}" && \
    fix-permissions "${CONDA_DIR}" && \
    fix-permissions "/home/${NB_USER}"

#Install pycaret environment
ARG conda_env=stack-pycaret
ARG py_ver=3.9

COPY --chown=${NB_UID}:${NB_GID} "${conda_env}.yml" "/home/${NB_USER}/tmp/"
RUN cd "/home/${NB_USER}/tmp/" && \
     mamba env create -p "${CONDA_DIR}/envs/${conda_env}" -f "${conda_env}.yml" && \
     mamba clean --all -f -y

RUN "${CONDA_DIR}/envs/${conda_env}/bin/python" -m ipykernel install --user --name="${conda_env}" && \
    fix-permissions "${CONDA_DIR}" && \
    fix-permissions "/home/${NB_USER}"

#Install geocube environment

#Install the requirements for psycopg2 and libtiff5 which is required for matlibpolot pyplot
#https://stackoverflow.com/questions/59952898/cannot-install-psycopg2-on-ubuntu-18-04
USER root

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends --no-install-suggests \
    software-properties-common gpg-agent && \
    apt-get update && \
    add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable && \
    apt update && \ 
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends --no-install-suggests \
    build-essential \
    libpq-dev \
    libtiff5 \
    subversion \
    proj-bin \
    grass-core \
    grass-dev && \
    apt-get autoremove && \
    apt-get clean

RUN mkdir -p $HOME/grassdata \
    && grass -c epsg:2163  $HOME/grassdata/test -e \
    && grass $HOME/grassdata/test/PERMANENT --exec g.extension extension=r.basin -s \
    && grass $HOME/grassdata/test/PERMANENT --exec g.extension extension=r.stream.snap -s \
    && grass $HOME/grassdata/test/PERMANENT --exec g.extension extension=r.stream.distance -s \
    && grass $HOME/grassdata/test/PERMANENT --exec g.extension extension=r.stream.basins -s \
    && grass $HOME/grassdata/test/PERMANENT --exec g.extension extension=r.hypso -s  \
    && grass $HOME/grassdata/test/PERMANENT --exec g.extension extension=r.stream.stats -s\
    && grass $HOME/grassdata/test/PERMANENT --exec g.extension extension=r.stream.order -s  \
    && grass $HOME/grassdata/test/PERMANENT --exec g.extension extension=r.width.funct -s \
    && grass $HOME/grassdata/test/PERMANENT --exec g.extension extension=r.traveltime -s  \
    && grass $HOME/grassdata/test/PERMANENT --exec g.extension extension=r.clip -s 

RUN chmod -R a+rwx $HOME
RUN chown -R $NB_USER .

USER $NB_USER

#RUN mamba install -y proj && \
#    mamba clean --all -f -y && \
#    fix-permissions "${CONDA_DIR}" && \
#    fix-permissions "/home/${NB_USER}"

ARG conda_env=stack-geo
ARG py_ver=3.9.12

COPY --chown=${NB_UID}:${NB_GID} "${conda_env}.yml" "/home/${NB_USER}/tmp/"
RUN cd "/home/${NB_USER}/tmp/" && \
     mamba env create -p "${CONDA_DIR}/envs/${conda_env}" -f "${conda_env}.yml" && \
     mamba clean --all -f -y

RUN "${CONDA_DIR}/envs/${conda_env}/bin/python" -m ipykernel install --user --name="${conda_env}" && \
    fix-permissions "${CONDA_DIR}" && \
    fix-permissions "/home/${NB_USER}"

RUN jupyter labextension install @jupyter-widgets/jupyterlab-manager jupyterlab-plotly

#USER root

#RUN chmod -R a+rwx $HOME
#RUN chmod -R $NB_USER

#USER $NB_USERchmod

#TO DO

# Resources for setup based on Poetry instead of pip. 
# Ideally should use conda only for packages poetry can't install, e.g., gdal with C++ dependencies, etc.
#https://stackoverflow.com/questions/70851048/does-it-make-sense-to-use-conda-poetry
#https://stackoverflow.com/questions/53835198/integrating-python-poetry-with-docker
#https://ealizadeh.com/blog/guide-to-python-env-pkg-dependency-using-conda-poetry/
#https://serpapi.com/blog/python-virtual-environments-using-virtualenv-and-poetry/
#https://nanthony007.medium.com/stop-using-pip-use-poetry-instead-db7164f4fc72
#Best practices
#https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#pip-in-env